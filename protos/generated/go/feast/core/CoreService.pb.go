// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/core/CoreService.proto

package core

import (
	context "context"
	fmt "fmt"
	specs "github.com/gojek/feast/protos/generated/go/feast/specs"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CoreServiceTypes_GetUploadUrlRequest_FileType int32

const (
	CoreServiceTypes_GetUploadUrlRequest_CSV  CoreServiceTypes_GetUploadUrlRequest_FileType = 0
	CoreServiceTypes_GetUploadUrlRequest_JSON CoreServiceTypes_GetUploadUrlRequest_FileType = 1
)

var CoreServiceTypes_GetUploadUrlRequest_FileType_name = map[int32]string{
	0: "CSV",
	1: "JSON",
}

var CoreServiceTypes_GetUploadUrlRequest_FileType_value = map[string]int32{
	"CSV":  0,
	"JSON": 1,
}

func (x CoreServiceTypes_GetUploadUrlRequest_FileType) String() string {
	return proto.EnumName(CoreServiceTypes_GetUploadUrlRequest_FileType_name, int32(x))
}

func (CoreServiceTypes_GetUploadUrlRequest_FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 12, 0}
}

type CoreServiceTypes_GetUploadUrlResponse_HttpMethod int32

const (
	CoreServiceTypes_GetUploadUrlResponse_PUT CoreServiceTypes_GetUploadUrlResponse_HttpMethod = 0
)

var CoreServiceTypes_GetUploadUrlResponse_HttpMethod_name = map[int32]string{
	0: "PUT",
}

var CoreServiceTypes_GetUploadUrlResponse_HttpMethod_value = map[string]int32{
	"PUT": 0,
}

func (x CoreServiceTypes_GetUploadUrlResponse_HttpMethod) String() string {
	return proto.EnumName(CoreServiceTypes_GetUploadUrlResponse_HttpMethod_name, int32(x))
}

func (CoreServiceTypes_GetUploadUrlResponse_HttpMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 13, 0}
}

type CoreServiceTypes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes) Reset()         { *m = CoreServiceTypes{} }
func (m *CoreServiceTypes) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes) ProtoMessage()    {}
func (*CoreServiceTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0}
}

func (m *CoreServiceTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes.Unmarshal(m, b)
}
func (m *CoreServiceTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes.Merge(m, src)
}
func (m *CoreServiceTypes) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes.Size(m)
}
func (m *CoreServiceTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes proto.InternalMessageInfo

type CoreServiceTypes_GetEntitiesRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_GetEntitiesRequest) Reset()         { *m = CoreServiceTypes_GetEntitiesRequest{} }
func (m *CoreServiceTypes_GetEntitiesRequest) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetEntitiesRequest) ProtoMessage()    {}
func (*CoreServiceTypes_GetEntitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 0}
}

func (m *CoreServiceTypes_GetEntitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetEntitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetEntitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest.Merge(m, src)
}
func (m *CoreServiceTypes_GetEntitiesRequest) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest.Size(m)
}
func (m *CoreServiceTypes_GetEntitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetEntitiesRequest proto.InternalMessageInfo

func (m *CoreServiceTypes_GetEntitiesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type CoreServiceTypes_GetEntitiesResponse struct {
	Entities             []*specs.EntitySpec `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CoreServiceTypes_GetEntitiesResponse) Reset()         { *m = CoreServiceTypes_GetEntitiesResponse{} }
func (m *CoreServiceTypes_GetEntitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetEntitiesResponse) ProtoMessage()    {}
func (*CoreServiceTypes_GetEntitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 1}
}

func (m *CoreServiceTypes_GetEntitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetEntitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetEntitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse.Merge(m, src)
}
func (m *CoreServiceTypes_GetEntitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse.Size(m)
}
func (m *CoreServiceTypes_GetEntitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetEntitiesResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_GetEntitiesResponse) GetEntities() []*specs.EntitySpec {
	if m != nil {
		return m.Entities
	}
	return nil
}

type CoreServiceTypes_ListEntitiesResponse struct {
	Entities             []*specs.EntitySpec `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CoreServiceTypes_ListEntitiesResponse) Reset()         { *m = CoreServiceTypes_ListEntitiesResponse{} }
func (m *CoreServiceTypes_ListEntitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_ListEntitiesResponse) ProtoMessage()    {}
func (*CoreServiceTypes_ListEntitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 2}
}

func (m *CoreServiceTypes_ListEntitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ListEntitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ListEntitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ListEntitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse.Size(m)
}
func (m *CoreServiceTypes_ListEntitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ListEntitiesResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ListEntitiesResponse) GetEntities() []*specs.EntitySpec {
	if m != nil {
		return m.Entities
	}
	return nil
}

// Feature retrieval
type CoreServiceTypes_GetFeaturesRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_GetFeaturesRequest) Reset()         { *m = CoreServiceTypes_GetFeaturesRequest{} }
func (m *CoreServiceTypes_GetFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetFeaturesRequest) ProtoMessage()    {}
func (*CoreServiceTypes_GetFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 3}
}

func (m *CoreServiceTypes_GetFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest.Merge(m, src)
}
func (m *CoreServiceTypes_GetFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest.Size(m)
}
func (m *CoreServiceTypes_GetFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetFeaturesRequest proto.InternalMessageInfo

func (m *CoreServiceTypes_GetFeaturesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type CoreServiceTypes_GetFeaturesResponse struct {
	Features             []*specs.FeatureSpec `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoreServiceTypes_GetFeaturesResponse) Reset()         { *m = CoreServiceTypes_GetFeaturesResponse{} }
func (m *CoreServiceTypes_GetFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetFeaturesResponse) ProtoMessage()    {}
func (*CoreServiceTypes_GetFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 4}
}

func (m *CoreServiceTypes_GetFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse.Merge(m, src)
}
func (m *CoreServiceTypes_GetFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse.Size(m)
}
func (m *CoreServiceTypes_GetFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetFeaturesResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_GetFeaturesResponse) GetFeatures() []*specs.FeatureSpec {
	if m != nil {
		return m.Features
	}
	return nil
}

type CoreServiceTypes_ListFeaturesResponse struct {
	Features             []*specs.FeatureSpec `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoreServiceTypes_ListFeaturesResponse) Reset()         { *m = CoreServiceTypes_ListFeaturesResponse{} }
func (m *CoreServiceTypes_ListFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_ListFeaturesResponse) ProtoMessage()    {}
func (*CoreServiceTypes_ListFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 5}
}

func (m *CoreServiceTypes_ListFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ListFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ListFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ListFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse.Size(m)
}
func (m *CoreServiceTypes_ListFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ListFeaturesResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ListFeaturesResponse) GetFeatures() []*specs.FeatureSpec {
	if m != nil {
		return m.Features
	}
	return nil
}

// Storage spec retrieval
type CoreServiceTypes_GetStorageRequest struct {
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_GetStorageRequest) Reset()         { *m = CoreServiceTypes_GetStorageRequest{} }
func (m *CoreServiceTypes_GetStorageRequest) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetStorageRequest) ProtoMessage()    {}
func (*CoreServiceTypes_GetStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 6}
}

func (m *CoreServiceTypes_GetStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetStorageRequest.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetStorageRequest.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetStorageRequest.Merge(m, src)
}
func (m *CoreServiceTypes_GetStorageRequest) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetStorageRequest.Size(m)
}
func (m *CoreServiceTypes_GetStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetStorageRequest proto.InternalMessageInfo

func (m *CoreServiceTypes_GetStorageRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type CoreServiceTypes_GetStorageResponse struct {
	StorageSpecs         []*specs.StorageSpec `protobuf:"bytes,1,rep,name=storageSpecs,proto3" json:"storageSpecs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoreServiceTypes_GetStorageResponse) Reset()         { *m = CoreServiceTypes_GetStorageResponse{} }
func (m *CoreServiceTypes_GetStorageResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetStorageResponse) ProtoMessage()    {}
func (*CoreServiceTypes_GetStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 7}
}

func (m *CoreServiceTypes_GetStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetStorageResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetStorageResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetStorageResponse.Merge(m, src)
}
func (m *CoreServiceTypes_GetStorageResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetStorageResponse.Size(m)
}
func (m *CoreServiceTypes_GetStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetStorageResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_GetStorageResponse) GetStorageSpecs() []*specs.StorageSpec {
	if m != nil {
		return m.StorageSpecs
	}
	return nil
}

type CoreServiceTypes_ListStorageResponse struct {
	StorageSpecs         []*specs.StorageSpec `protobuf:"bytes,1,rep,name=storageSpecs,proto3" json:"storageSpecs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CoreServiceTypes_ListStorageResponse) Reset()         { *m = CoreServiceTypes_ListStorageResponse{} }
func (m *CoreServiceTypes_ListStorageResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_ListStorageResponse) ProtoMessage()    {}
func (*CoreServiceTypes_ListStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 8}
}

func (m *CoreServiceTypes_ListStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ListStorageResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ListStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ListStorageResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ListStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ListStorageResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ListStorageResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ListStorageResponse.Size(m)
}
func (m *CoreServiceTypes_ListStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ListStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ListStorageResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ListStorageResponse) GetStorageSpecs() []*specs.StorageSpec {
	if m != nil {
		return m.StorageSpecs
	}
	return nil
}

// Entity registration response
type CoreServiceTypes_ApplyEntityResponse struct {
	EntityName           string   `protobuf:"bytes,1,opt,name=entityName,proto3" json:"entityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_ApplyEntityResponse) Reset()         { *m = CoreServiceTypes_ApplyEntityResponse{} }
func (m *CoreServiceTypes_ApplyEntityResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_ApplyEntityResponse) ProtoMessage()    {}
func (*CoreServiceTypes_ApplyEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 9}
}

func (m *CoreServiceTypes_ApplyEntityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ApplyEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ApplyEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ApplyEntityResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse.Size(m)
}
func (m *CoreServiceTypes_ApplyEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ApplyEntityResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ApplyEntityResponse) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

// Feature registration response
type CoreServiceTypes_ApplyFeatureResponse struct {
	FeatureId            string   `protobuf:"bytes,1,opt,name=featureId,proto3" json:"featureId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_ApplyFeatureResponse) Reset()         { *m = CoreServiceTypes_ApplyFeatureResponse{} }
func (m *CoreServiceTypes_ApplyFeatureResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_ApplyFeatureResponse) ProtoMessage()    {}
func (*CoreServiceTypes_ApplyFeatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 10}
}

func (m *CoreServiceTypes_ApplyFeatureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ApplyFeatureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ApplyFeatureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ApplyFeatureResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse.Size(m)
}
func (m *CoreServiceTypes_ApplyFeatureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ApplyFeatureResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ApplyFeatureResponse) GetFeatureId() string {
	if m != nil {
		return m.FeatureId
	}
	return ""
}

// Feature group registration response
type CoreServiceTypes_ApplyFeatureGroupResponse struct {
	FeatureGroupId       string   `protobuf:"bytes,1,opt,name=featureGroupId,proto3" json:"featureGroupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_ApplyFeatureGroupResponse) Reset() {
	*m = CoreServiceTypes_ApplyFeatureGroupResponse{}
}
func (m *CoreServiceTypes_ApplyFeatureGroupResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CoreServiceTypes_ApplyFeatureGroupResponse) ProtoMessage() {}
func (*CoreServiceTypes_ApplyFeatureGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 11}
}

func (m *CoreServiceTypes_ApplyFeatureGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_ApplyFeatureGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_ApplyFeatureGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse.Merge(m, src)
}
func (m *CoreServiceTypes_ApplyFeatureGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse.Size(m)
}
func (m *CoreServiceTypes_ApplyFeatureGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_ApplyFeatureGroupResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_ApplyFeatureGroupResponse) GetFeatureGroupId() string {
	if m != nil {
		return m.FeatureGroupId
	}
	return ""
}

type CoreServiceTypes_GetUploadUrlRequest struct {
	FileType             CoreServiceTypes_GetUploadUrlRequest_FileType `protobuf:"varint,1,opt,name=fileType,proto3,enum=feast.core.CoreServiceTypes_GetUploadUrlRequest_FileType" json:"fileType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *CoreServiceTypes_GetUploadUrlRequest) Reset()         { *m = CoreServiceTypes_GetUploadUrlRequest{} }
func (m *CoreServiceTypes_GetUploadUrlRequest) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetUploadUrlRequest) ProtoMessage()    {}
func (*CoreServiceTypes_GetUploadUrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 12}
}

func (m *CoreServiceTypes_GetUploadUrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetUploadUrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetUploadUrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest.Merge(m, src)
}
func (m *CoreServiceTypes_GetUploadUrlRequest) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest.Size(m)
}
func (m *CoreServiceTypes_GetUploadUrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetUploadUrlRequest proto.InternalMessageInfo

func (m *CoreServiceTypes_GetUploadUrlRequest) GetFileType() CoreServiceTypes_GetUploadUrlRequest_FileType {
	if m != nil {
		return m.FileType
	}
	return CoreServiceTypes_GetUploadUrlRequest_CSV
}

type CoreServiceTypes_GetUploadUrlResponse struct {
	// url specifies the full signed URL where a client can make a request to upload file to GCS
	Url        string                                           `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	HttpMethod CoreServiceTypes_GetUploadUrlResponse_HttpMethod `protobuf:"varint,2,opt,name=httpMethod,proto3,enum=feast.core.CoreServiceTypes_GetUploadUrlResponse_HttpMethod" json:"httpMethod,omitempty"`
	// expiration specifies the timestamp the signed URL is valid until
	Expiration *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// path specifies the location in GCS where the file is saved to i.e. gs://[path]
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreServiceTypes_GetUploadUrlResponse) Reset()         { *m = CoreServiceTypes_GetUploadUrlResponse{} }
func (m *CoreServiceTypes_GetUploadUrlResponse) String() string { return proto.CompactTextString(m) }
func (*CoreServiceTypes_GetUploadUrlResponse) ProtoMessage()    {}
func (*CoreServiceTypes_GetUploadUrlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0, 13}
}

func (m *CoreServiceTypes_GetUploadUrlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse.Unmarshal(m, b)
}
func (m *CoreServiceTypes_GetUploadUrlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse.Marshal(b, m, deterministic)
}
func (m *CoreServiceTypes_GetUploadUrlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse.Merge(m, src)
}
func (m *CoreServiceTypes_GetUploadUrlResponse) XXX_Size() int {
	return xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse.Size(m)
}
func (m *CoreServiceTypes_GetUploadUrlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoreServiceTypes_GetUploadUrlResponse proto.InternalMessageInfo

func (m *CoreServiceTypes_GetUploadUrlResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CoreServiceTypes_GetUploadUrlResponse) GetHttpMethod() CoreServiceTypes_GetUploadUrlResponse_HttpMethod {
	if m != nil {
		return m.HttpMethod
	}
	return CoreServiceTypes_GetUploadUrlResponse_PUT
}

func (m *CoreServiceTypes_GetUploadUrlResponse) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *CoreServiceTypes_GetUploadUrlResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterEnum("feast.core.CoreServiceTypes_GetUploadUrlRequest_FileType", CoreServiceTypes_GetUploadUrlRequest_FileType_name, CoreServiceTypes_GetUploadUrlRequest_FileType_value)
	proto.RegisterEnum("feast.core.CoreServiceTypes_GetUploadUrlResponse_HttpMethod", CoreServiceTypes_GetUploadUrlResponse_HttpMethod_name, CoreServiceTypes_GetUploadUrlResponse_HttpMethod_value)
	proto.RegisterType((*CoreServiceTypes)(nil), "feast.core.CoreServiceTypes")
	proto.RegisterType((*CoreServiceTypes_GetEntitiesRequest)(nil), "feast.core.CoreServiceTypes.GetEntitiesRequest")
	proto.RegisterType((*CoreServiceTypes_GetEntitiesResponse)(nil), "feast.core.CoreServiceTypes.GetEntitiesResponse")
	proto.RegisterType((*CoreServiceTypes_ListEntitiesResponse)(nil), "feast.core.CoreServiceTypes.ListEntitiesResponse")
	proto.RegisterType((*CoreServiceTypes_GetFeaturesRequest)(nil), "feast.core.CoreServiceTypes.GetFeaturesRequest")
	proto.RegisterType((*CoreServiceTypes_GetFeaturesResponse)(nil), "feast.core.CoreServiceTypes.GetFeaturesResponse")
	proto.RegisterType((*CoreServiceTypes_ListFeaturesResponse)(nil), "feast.core.CoreServiceTypes.ListFeaturesResponse")
	proto.RegisterType((*CoreServiceTypes_GetStorageRequest)(nil), "feast.core.CoreServiceTypes.GetStorageRequest")
	proto.RegisterType((*CoreServiceTypes_GetStorageResponse)(nil), "feast.core.CoreServiceTypes.GetStorageResponse")
	proto.RegisterType((*CoreServiceTypes_ListStorageResponse)(nil), "feast.core.CoreServiceTypes.ListStorageResponse")
	proto.RegisterType((*CoreServiceTypes_ApplyEntityResponse)(nil), "feast.core.CoreServiceTypes.ApplyEntityResponse")
	proto.RegisterType((*CoreServiceTypes_ApplyFeatureResponse)(nil), "feast.core.CoreServiceTypes.ApplyFeatureResponse")
	proto.RegisterType((*CoreServiceTypes_ApplyFeatureGroupResponse)(nil), "feast.core.CoreServiceTypes.ApplyFeatureGroupResponse")
	proto.RegisterType((*CoreServiceTypes_GetUploadUrlRequest)(nil), "feast.core.CoreServiceTypes.GetUploadUrlRequest")
	proto.RegisterType((*CoreServiceTypes_GetUploadUrlResponse)(nil), "feast.core.CoreServiceTypes.GetUploadUrlResponse")
}

func init() { proto.RegisterFile("feast/core/CoreService.proto", fileDescriptor_d9be266444105411) }

var fileDescriptor_d9be266444105411 = []byte{
	// 769 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x4f, 0x13, 0x41,
	0x1c, 0xdd, 0xa5, 0x44, 0xdb, 0x5f, 0x1b, 0x52, 0x06, 0xd4, 0x3a, 0x82, 0x92, 0x4d, 0x24, 0x9c,
	0x66, 0xb1, 0x80, 0x89, 0x86, 0x8b, 0x10, 0x40, 0x01, 0x91, 0x6c, 0xa9, 0x07, 0xc4, 0xc3, 0xd2,
	0x4e, 0xdb, 0xd5, 0xb6, 0x33, 0xee, 0x4e, 0x8d, 0xfd, 0x06, 0x26, 0xde, 0xbd, 0xfb, 0x01, 0xfd,
	0x0e, 0x66, 0x67, 0xa7, 0xbb, 0xd3, 0xb2, 0x65, 0xc1, 0x70, 0xdb, 0xfe, 0xfe, 0xbc, 0xdf, 0xbc,
	0x79, 0x33, 0xaf, 0x03, 0x4b, 0x2d, 0xea, 0x06, 0xc2, 0x6e, 0x30, 0x9f, 0xda, 0xbb, 0xcc, 0xa7,
	0x35, 0xea, 0x7f, 0xf7, 0x1a, 0x94, 0x70, 0x9f, 0x09, 0x86, 0x40, 0x66, 0x49, 0x98, 0xc5, 0xaa,
	0x32, 0xe0, 0xb4, 0x11, 0xd8, 0x7b, 0x7d, 0xe1, 0x89, 0x61, 0x8d, 0xd3, 0x46, 0x54, 0x89, 0x97,
	0xf5, 0xec, 0x3e, 0x75, 0xc5, 0xc0, 0xa7, 0x5a, 0xda, 0x4a, 0x49, 0x1f, 0xf8, 0x6c, 0xc0, 0xa7,
	0x41, 0xd4, 0x04, 0xf3, 0xdd, 0xb6, 0x0e, 0xf1, 0xa4, 0xcd, 0x58, 0xbb, 0x4b, 0x6d, 0xf9, 0xeb,
	0x72, 0xd0, 0xb2, 0x69, 0x8f, 0x8b, 0xa1, 0x4a, 0x3e, 0x9b, 0x4c, 0x0a, 0xaf, 0x47, 0x03, 0xe1,
	0xf6, 0x78, 0x54, 0x60, 0xfd, 0x2e, 0x40, 0x59, 0xe3, 0x77, 0x36, 0xe4, 0x34, 0xc0, 0xab, 0x80,
	0x0e, 0xa8, 0x90, 0x5c, 0x3c, 0x1a, 0x38, 0xf4, 0xdb, 0x80, 0x06, 0x02, 0x95, 0x21, 0xe7, 0x35,
	0x83, 0x8a, 0xb9, 0x92, 0x5b, 0x2b, 0x38, 0xe1, 0x27, 0x3e, 0x84, 0x85, 0xb1, 0xba, 0x80, 0xb3,
	0x7e, 0x40, 0xd1, 0x06, 0xe4, 0xa9, 0x8a, 0xc9, 0xea, 0x62, 0xf5, 0x11, 0x89, 0x36, 0x4c, 0x72,
	0x20, 0xc9, 0x26, 0x39, 0x71, 0x21, 0x3e, 0x82, 0xc5, 0x63, 0x2f, 0xb8, 0x23, 0xb0, 0x88, 0x80,
	0xda, 0xcf, 0x6b, 0x08, 0x1c, 0x49, 0x02, 0x49, 0x9d, 0x9a, 0xb9, 0x09, 0xf9, 0x96, 0x8a, 0xa9,
	0x99, 0x95, 0xb1, 0x99, 0x9a, 0x8e, 0x4e, 0x5c, 0x89, 0x8f, 0x23, 0x06, 0x77, 0x84, 0xf6, 0x1c,
	0xe6, 0x0f, 0xa8, 0x50, 0x72, 0x4f, 0x67, 0xe0, 0x48, 0xa6, 0x71, 0x99, 0x1a, 0xb9, 0x0d, 0xa5,
	0x20, 0x39, 0x28, 0xe9, 0x63, 0xb5, 0x93, 0xe4, 0x8c, 0x55, 0xe3, 0x1a, 0x2c, 0x84, 0x44, 0xee,
	0x16, 0x74, 0x0b, 0x16, 0xde, 0x70, 0xde, 0x1d, 0x46, 0x7a, 0xc5, 0xa0, 0x4f, 0x01, 0xa4, 0x6a,
	0xc3, 0x13, 0xb7, 0x47, 0x2b, 0xe6, 0x8a, 0xb9, 0x56, 0x70, 0xb4, 0x08, 0xde, 0x84, 0x45, 0xd9,
	0xa6, 0x36, 0x29, 0xee, 0x5b, 0x82, 0x82, 0xda, 0xaa, 0x77, 0x4d, 0xd5, 0x96, 0x04, 0xf0, 0x2e,
	0x3c, 0xd6, 0xbb, 0xe4, 0x8d, 0x8a, 0x5b, 0x57, 0x61, 0xae, 0xa5, 0xc5, 0xe3, 0xfe, 0x89, 0x28,
	0xfe, 0x65, 0xca, 0xd3, 0x51, 0xe7, 0x5d, 0xe6, 0x36, 0xeb, 0x7e, 0x77, 0x24, 0x42, 0x1d, 0xf2,
	0x2d, 0xaf, 0x2b, 0xaf, 0x8a, 0xec, 0x9c, 0xab, 0xbe, 0x22, 0x89, 0x1f, 0x90, 0xc9, 0xdb, 0x44,
	0x52, 0x30, 0xc8, 0xbe, 0x02, 0x70, 0x62, 0x28, 0x6b, 0x19, 0xf2, 0xa3, 0x28, 0xba, 0x0f, 0xb9,
	0xdd, 0xda, 0xc7, 0xb2, 0x81, 0xf2, 0x30, 0x7b, 0x58, 0xfb, 0x70, 0x52, 0x36, 0xf1, 0x5f, 0x13,
	0x16, 0xc7, 0x91, 0x14, 0x9d, 0x32, 0xe4, 0x06, 0x7e, 0x57, 0x71, 0x08, 0x3f, 0xd1, 0x05, 0x40,
	0x47, 0x08, 0xfe, 0x9e, 0x8a, 0x0e, 0x6b, 0x56, 0x66, 0xe4, 0x12, 0xb7, 0x6f, 0xb1, 0xc4, 0x08,
	0x98, 0xbc, 0x8d, 0x31, 0x1c, 0x0d, 0x0f, 0xbd, 0x06, 0xa0, 0x3f, 0xb8, 0xe7, 0xbb, 0xc2, 0x63,
	0xfd, 0x4a, 0x6e, 0xc5, 0x5c, 0x2b, 0x56, 0x31, 0x89, 0x7c, 0x86, 0x8c, 0x7c, 0x86, 0x9c, 0x8d,
	0x7c, 0xc6, 0xd1, 0xaa, 0x11, 0x82, 0x59, 0xee, 0x8a, 0x4e, 0x65, 0x56, 0x2e, 0x56, 0x7e, 0x5b,
	0x0f, 0x00, 0x92, 0x49, 0x21, 0xf3, 0xd3, 0xfa, 0x59, 0xd9, 0xa8, 0xfe, 0xc9, 0x43, 0x51, 0x5b,
	0x27, 0xf2, 0xa1, 0xa8, 0x79, 0x0d, 0xb2, 0xb3, 0xf8, 0x4c, 0xb8, 0x17, 0x5e, 0xbf, 0x79, 0x43,
	0xc4, 0xdf, 0x32, 0xd0, 0x27, 0x28, 0xe9, 0x9e, 0x84, 0x1e, 0x5e, 0xa1, 0xb9, 0x17, 0x7a, 0x2d,
	0x7e, 0x71, 0x2d, 0x76, 0x9a, 0xad, 0x59, 0x06, 0xf2, 0x01, 0x92, 0x9b, 0x8b, 0x48, 0xd6, 0xf2,
	0xc6, 0x9d, 0x00, 0xdb, 0x37, 0xae, 0x57, 0x03, 0x73, 0x3f, 0x67, 0x4c, 0x74, 0x01, 0x45, 0xed,
	0x66, 0x4f, 0xe5, 0xb3, 0x9e, 0xc9, 0x27, 0x15, 0x3d, 0x92, 0x68, 0xe4, 0x7f, 0xd9, 0x12, 0x4d,
	0xf8, 0x73, 0xb6, 0x44, 0x93, 0xd6, 0x9a, 0x48, 0x14, 0x0f, 0xfd, 0x7f, 0x89, 0x52, 0xc0, 0x3f,
	0x43, 0x49, 0xb7, 0x11, 0x34, 0xd5, 0xb7, 0x33, 0xe0, 0xd3, 0x1c, 0xcc, 0x32, 0x50, 0x17, 0xe6,
	0xaf, 0xb8, 0x14, 0x5a, 0x4e, 0x9b, 0x11, 0x3f, 0x09, 0xf0, 0xcb, 0x1b, 0x0f, 0x1a, 0x33, 0x3d,
	0xcb, 0x40, 0xe7, 0x50, 0xd4, 0x0c, 0x18, 0x4d, 0xfb, 0x17, 0xcd, 0x50, 0x21, 0xc5, 0xc3, 0x2d,
	0x03, 0x0d, 0xa0, 0xa4, 0x5b, 0x08, 0x5a, 0xbf, 0xad, 0x21, 0x66, 0x6c, 0x60, 0x9a, 0x3f, 0x59,
	0xc6, 0x4e, 0x1d, 0xb4, 0x87, 0xd8, 0x8e, 0xfe, 0x8e, 0x39, 0x0d, 0xd5, 0x3f, 0xdf, 0x6a, 0x7b,
	0xa2, 0x33, 0xb8, 0x24, 0x0d, 0xd6, 0xb3, 0xdb, 0xec, 0x0b, 0xfd, 0x6a, 0x47, 0x4f, 0x29, 0x79,
	0x36, 0x02, 0xbb, 0x4d, 0xfb, 0xd4, 0x77, 0x05, 0x6d, 0xda, 0x6d, 0x66, 0x27, 0xef, 0xbd, 0xcb,
	0x7b, 0x32, 0xbf, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xc7, 0x4b, 0x05, 0x04, 0x0a, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreServiceClient is the client API for CoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreServiceClient interface {
	//
	//Get entities specified in request.
	//This process returns a list of entity specs.
	GetEntities(ctx context.Context, in *CoreServiceTypes_GetEntitiesRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetEntitiesResponse, error)
	//
	//Get all entities
	//This process returns a list of entity specs.
	ListEntities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListEntitiesResponse, error)
	//
	//Get storage specs specified in request.
	//This process returns a list of storage specs.
	//
	// Deprecated: Do not use.
	GetStorage(ctx context.Context, in *CoreServiceTypes_GetStorageRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetStorageResponse, error)
	//
	//Get all storage specs.
	//This process returns a list of storage specs.
	//
	// Deprecated: Do not use.
	ListStorage(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListStorageResponse, error)
	//
	//Get features specified in request.
	//This process returns a list of feature specs.
	GetFeatures(ctx context.Context, in *CoreServiceTypes_GetFeaturesRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetFeaturesResponse, error)
	//
	//Get all features.
	//This process returns a list of entity specs.
	ListFeatures(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListFeaturesResponse, error)
	//
	//Register a new feature to the metadata store, or update an existing feature.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyFeature(ctx context.Context, in *specs.FeatureSpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyFeatureResponse, error)
	//
	//Register a new feature group to the metadata store, or update an existing feature group.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyFeatureGroup(ctx context.Context, in *specs.FeatureGroupSpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyFeatureGroupResponse, error)
	//
	//Register a new entity to the metadata store, or update an existing entity.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyEntity(ctx context.Context, in *specs.EntitySpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyEntityResponse, error)
	//
	//Request a signed URL where a Feast client can upload a feature values file for an import job.
	//The signed URL will be valid by default for 5 minutes during which the client can start
	//uploading the feature values file. As of 2019-06-28, only CSV and JSON files are supported,
	//and the upload must complete in one PUT request i.e. resumable upload is not supported.
	GetUploadUrl(ctx context.Context, in *CoreServiceTypes_GetUploadUrlRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetUploadUrlResponse, error)
}

type coreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoreServiceClient(cc *grpc.ClientConn) CoreServiceClient {
	return &coreServiceClient{cc}
}

func (c *coreServiceClient) GetEntities(ctx context.Context, in *CoreServiceTypes_GetEntitiesRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetEntitiesResponse, error) {
	out := new(CoreServiceTypes_GetEntitiesResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ListEntities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListEntitiesResponse, error) {
	out := new(CoreServiceTypes_ListEntitiesResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *coreServiceClient) GetStorage(ctx context.Context, in *CoreServiceTypes_GetStorageRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetStorageResponse, error) {
	out := new(CoreServiceTypes_GetStorageResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *coreServiceClient) ListStorage(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListStorageResponse, error) {
	out := new(CoreServiceTypes_ListStorageResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) GetFeatures(ctx context.Context, in *CoreServiceTypes_GetFeaturesRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetFeaturesResponse, error) {
	out := new(CoreServiceTypes_GetFeaturesResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ListFeatures(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CoreServiceTypes_ListFeaturesResponse, error) {
	out := new(CoreServiceTypes_ListFeaturesResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ApplyFeature(ctx context.Context, in *specs.FeatureSpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyFeatureResponse, error) {
	out := new(CoreServiceTypes_ApplyFeatureResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ApplyFeature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ApplyFeatureGroup(ctx context.Context, in *specs.FeatureGroupSpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyFeatureGroupResponse, error) {
	out := new(CoreServiceTypes_ApplyFeatureGroupResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ApplyFeatureGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ApplyEntity(ctx context.Context, in *specs.EntitySpec, opts ...grpc.CallOption) (*CoreServiceTypes_ApplyEntityResponse, error) {
	out := new(CoreServiceTypes_ApplyEntityResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ApplyEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) GetUploadUrl(ctx context.Context, in *CoreServiceTypes_GetUploadUrlRequest, opts ...grpc.CallOption) (*CoreServiceTypes_GetUploadUrlResponse, error) {
	out := new(CoreServiceTypes_GetUploadUrlResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetUploadUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServiceServer is the server API for CoreService service.
type CoreServiceServer interface {
	//
	//Get entities specified in request.
	//This process returns a list of entity specs.
	GetEntities(context.Context, *CoreServiceTypes_GetEntitiesRequest) (*CoreServiceTypes_GetEntitiesResponse, error)
	//
	//Get all entities
	//This process returns a list of entity specs.
	ListEntities(context.Context, *empty.Empty) (*CoreServiceTypes_ListEntitiesResponse, error)
	//
	//Get storage specs specified in request.
	//This process returns a list of storage specs.
	//
	// Deprecated: Do not use.
	GetStorage(context.Context, *CoreServiceTypes_GetStorageRequest) (*CoreServiceTypes_GetStorageResponse, error)
	//
	//Get all storage specs.
	//This process returns a list of storage specs.
	//
	// Deprecated: Do not use.
	ListStorage(context.Context, *empty.Empty) (*CoreServiceTypes_ListStorageResponse, error)
	//
	//Get features specified in request.
	//This process returns a list of feature specs.
	GetFeatures(context.Context, *CoreServiceTypes_GetFeaturesRequest) (*CoreServiceTypes_GetFeaturesResponse, error)
	//
	//Get all features.
	//This process returns a list of entity specs.
	ListFeatures(context.Context, *empty.Empty) (*CoreServiceTypes_ListFeaturesResponse, error)
	//
	//Register a new feature to the metadata store, or update an existing feature.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyFeature(context.Context, *specs.FeatureSpec) (*CoreServiceTypes_ApplyFeatureResponse, error)
	//
	//Register a new feature group to the metadata store, or update an existing feature group.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyFeatureGroup(context.Context, *specs.FeatureGroupSpec) (*CoreServiceTypes_ApplyFeatureGroupResponse, error)
	//
	//Register a new entity to the metadata store, or update an existing entity.
	//If any validation errors occur, only the first encountered error will be returned.
	ApplyEntity(context.Context, *specs.EntitySpec) (*CoreServiceTypes_ApplyEntityResponse, error)
	//
	//Request a signed URL where a Feast client can upload a feature values file for an import job.
	//The signed URL will be valid by default for 5 minutes during which the client can start
	//uploading the feature values file. As of 2019-06-28, only CSV and JSON files are supported,
	//and the upload must complete in one PUT request i.e. resumable upload is not supported.
	GetUploadUrl(context.Context, *CoreServiceTypes_GetUploadUrlRequest) (*CoreServiceTypes_GetUploadUrlResponse, error)
}

// UnimplementedCoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServiceServer struct {
}

func (*UnimplementedCoreServiceServer) GetEntities(ctx context.Context, req *CoreServiceTypes_GetEntitiesRequest) (*CoreServiceTypes_GetEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntities not implemented")
}
func (*UnimplementedCoreServiceServer) ListEntities(ctx context.Context, req *empty.Empty) (*CoreServiceTypes_ListEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntities not implemented")
}
func (*UnimplementedCoreServiceServer) GetStorage(ctx context.Context, req *CoreServiceTypes_GetStorageRequest) (*CoreServiceTypes_GetStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorage not implemented")
}
func (*UnimplementedCoreServiceServer) ListStorage(ctx context.Context, req *empty.Empty) (*CoreServiceTypes_ListStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStorage not implemented")
}
func (*UnimplementedCoreServiceServer) GetFeatures(ctx context.Context, req *CoreServiceTypes_GetFeaturesRequest) (*CoreServiceTypes_GetFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeatures not implemented")
}
func (*UnimplementedCoreServiceServer) ListFeatures(ctx context.Context, req *empty.Empty) (*CoreServiceTypes_ListFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeatures not implemented")
}
func (*UnimplementedCoreServiceServer) ApplyFeature(ctx context.Context, req *specs.FeatureSpec) (*CoreServiceTypes_ApplyFeatureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyFeature not implemented")
}
func (*UnimplementedCoreServiceServer) ApplyFeatureGroup(ctx context.Context, req *specs.FeatureGroupSpec) (*CoreServiceTypes_ApplyFeatureGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyFeatureGroup not implemented")
}
func (*UnimplementedCoreServiceServer) ApplyEntity(ctx context.Context, req *specs.EntitySpec) (*CoreServiceTypes_ApplyEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyEntity not implemented")
}
func (*UnimplementedCoreServiceServer) GetUploadUrl(ctx context.Context, req *CoreServiceTypes_GetUploadUrlRequest) (*CoreServiceTypes_GetUploadUrlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUploadUrl not implemented")
}

func RegisterCoreServiceServer(s *grpc.Server, srv CoreServiceServer) {
	s.RegisterService(&_CoreService_serviceDesc, srv)
}

func _CoreService_GetEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoreServiceTypes_GetEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetEntities(ctx, req.(*CoreServiceTypes_GetEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListEntities(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoreServiceTypes_GetStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetStorage(ctx, req.(*CoreServiceTypes_GetStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListStorage(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_GetFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoreServiceTypes_GetFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetFeatures(ctx, req.(*CoreServiceTypes_GetFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListFeatures(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ApplyFeature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(specs.FeatureSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ApplyFeature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ApplyFeature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ApplyFeature(ctx, req.(*specs.FeatureSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ApplyFeatureGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(specs.FeatureGroupSpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ApplyFeatureGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ApplyFeatureGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ApplyFeatureGroup(ctx, req.(*specs.FeatureGroupSpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ApplyEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(specs.EntitySpec)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ApplyEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ApplyEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ApplyEntity(ctx, req.(*specs.EntitySpec))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_GetUploadUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoreServiceTypes_GetUploadUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetUploadUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetUploadUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetUploadUrl(ctx, req.(*CoreServiceTypes_GetUploadUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feast.core.CoreService",
	HandlerType: (*CoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEntities",
			Handler:    _CoreService_GetEntities_Handler,
		},
		{
			MethodName: "ListEntities",
			Handler:    _CoreService_ListEntities_Handler,
		},
		{
			MethodName: "GetStorage",
			Handler:    _CoreService_GetStorage_Handler,
		},
		{
			MethodName: "ListStorage",
			Handler:    _CoreService_ListStorage_Handler,
		},
		{
			MethodName: "GetFeatures",
			Handler:    _CoreService_GetFeatures_Handler,
		},
		{
			MethodName: "ListFeatures",
			Handler:    _CoreService_ListFeatures_Handler,
		},
		{
			MethodName: "ApplyFeature",
			Handler:    _CoreService_ApplyFeature_Handler,
		},
		{
			MethodName: "ApplyFeatureGroup",
			Handler:    _CoreService_ApplyFeatureGroup_Handler,
		},
		{
			MethodName: "ApplyEntity",
			Handler:    _CoreService_ApplyEntity_Handler,
		},
		{
			MethodName: "GetUploadUrl",
			Handler:    _CoreService_GetUploadUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feast/core/CoreService.proto",
}
